name: CI/CD - Build, Test, and Deploy Payment Service

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  AWS_REGION: sa-east-1
  ECR_REPOSITORY_API: payment-service-api
  SAM_S3_BUCKET: ${{ secrets.SAM_S3_BUCKET }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: test
      run: dotnet test --no-build --configuration release

  deploy-query-api:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }} # Secret com o ARN da sua Role de deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_API:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_API:$IMAGE_TAG
          echo "image_uri=$ECR_REGISTRY/$ECR_REPOSITORY_API:$IMAGE_TAG" >> $GITHUB_OUTPUT
      
      # TODO: Adicionar passo para acionar o deploy no AWS App Runner
      # - name: Deploy to AWS App Runner
      #   run: aws apprunner start-deployment --service-arn ${{ secrets.APP_RUNNER_SERVICE_ARN }}


  deploy-command-processor:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }} 
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Build Lambda package
        run: sam build


      - name: Deploy Lambda with SAM
        run: >
          sam deploy 
          --template .aws-sam/build/template.yaml 
          --stack-name payment-service-stack 
          --s3-bucket ${{ env.SAM_S3_BUCKET }} 
          --capabilities CAPABILITY_IAM 
          --region ${{ env.AWS_REGION }}
          --no-confirm-changeset
          --parameter-overrides 
            ParameterKey=RdsHost,ParameterValue=${{ secrets.RDS_HOST }} 
            ParameterKey=RdsPassword,ParameterValue=${{ secrets.RDS_PASSWORD }} 
            ParameterKey=SnsTopicArn,ParameterValue=${{ secrets.SNS_TOPIC_ARN }}
            ParameterKey=WalletQueueArn,ParameterValue=${{ secrets.WALLET_QUEUE_ARN }}
            ParameterKey=PurchaseQueueArn,ParameterValue=${{ secrets.PURCHASE_QUEUE_ARN }}
            ParameterKey=ReplyQueueName,ParameterValue=${{ secrets.REPLY_QUEUE_NAME }}
